Description: Despliega una VPC con 9 subnets, 3 subnets hibridas, 3 privadas y 3 públicas (uno en cada AZ). 
  Si se selecciona Master despliega 3 NAT gateways en la subnet pública (uno en cada AZ) y si se selecciona
  linked no crea Nat gateways. 1 internet gatway con 1 router para la subnet pública. 3 Routers para cada 
  subnet hibrida (uno en cada AZ) y 1 router para la subnet privada.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Parametros principales
        Parameters:
          - AccountNamingConstructor
          - VpcCIDR
          - MasterOrLinked
          - MasterTransitGateway
      - Label:
          default: Primera Zona de disponibilidad 
        Parameters:
          - AvailabilityZone1
          - PublicSubnet1CIDR
          - HybridSubnet1CIDR
          - PrivateSubnet1CIDR
      - Label:
          default: Segunda Zona de disponibilidad 
        Parameters:
          - AvailabilityZone2
          - PublicSubnet2CIDR
          - HybridSubnet2CIDR
          - PrivateSubnet2CIDR
      - Label:
          default: Tercera Zona de disponibilidad 
        Parameters:
          - AvailabilityZone3
          - PublicSubnet3CIDR
          - HybridSubnet3CIDR
          - PrivateSubnet3CIDR
    ParameterLabels:
      AccountNamingConstructor:
        default: Nombre Constructor de recursos
      VpcCIDR:
        default: Red VPC
      AvailabilityZone1:
        default: Zona de disponibilidad
      AvailabilityZone2:
        default: Zona de disponibilidad
      AvailabilityZone3:
        default: Zona de disponibilidad
      PublicSubnet1CIDR:
        default: Primera Subnet Publica
      PublicSubnet2CIDR:
        default: Segunda Subnet Publica
      PublicSubnet3CIDR:
        default: Tercera Subnet Publica
      PrivateSubnet1CIDR:
        default: Primera Subnet Privada
      PrivateSubnet2CIDR:
        default: Segunda Subnet Privada
      PrivateSubnet3CIDR:
        default: Tercera Subnet Privada
      HybridSubnet1CIDR:
        default: Primera Subnet Hibrida
      HybridSubnet2CIDR:
        default: Segunda Subnet Hibrida
      HybridSubnet3CIDR:
        default: Tercera Subnet Hibrida
      MasterOrLinked:
        default: Red Master o Red Linked
      MasterTransitGateway:
        default: ID de Transit Gateway (Opcional)

Parameters:
  AccountNamingConstructor:
    Description: Un nombre de entorno prefijado a los nombres de los recursos.
    Type: String

  VpcCIDR:
    Description: Ingrese el rango de IP (CIDR) para esta VPC
    Type: String
    Default: 10.173.160.0/20
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  AvailabilityZone1:
    Description: La zona de disponibilidad a utilizar para la primera subred
    Type: AWS::EC2::AvailabilityZone::Name

  AvailabilityZone2:
    Description: La zona de disponibilidad a utilizar para la segunda subred
    Type: AWS::EC2::AvailabilityZone::Name

  AvailabilityZone3:
    Description: La zona de disponibilidad a utilizar para la tercera subred
    Type: AWS::EC2::AvailabilityZone::Name

  PublicSubnet1CIDR:
    Description: Ingrese el rango de IP (CIDR) para la subred publica en la primera zona de disponibilidad
    Type: String
    Default: 10.173.160.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  PublicSubnet2CIDR:
    Description: Ingrese el rango de IP (CIDR) para la subred publica en la segunda  zona de disponibilidad
    Type: String
    Default: 10.173.163.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
  
  PublicSubnet3CIDR:
    Description: Ingrese el rango de IP (CIDR) para la subred publica en la tercera zona de disponibilidad
    Type: String
    Default: 10.173.166.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  PrivateSubnet1CIDR:
    Description: Ingrese el rango de IP (CIDR) para la subred privada en la primera zona de disponibilidad
    Type: String
    Default: 10.173.161.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  PrivateSubnet2CIDR:
    Description: Ingrese el rango de IP (CIDR) para la subred privada en la segunda zona de disponibilidad
    Type: String
    Default: 10.173.164.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
  
  PrivateSubnet3CIDR:
    Description: Ingrese el rango de IP (CIDR) para la subred privada en la tercera zona de disponibilidad
    Type: String
    Default: 10.173.167.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  HybridSubnet1CIDR:
    Description: Ingrese el rango de IP (CIDR) para la subred hibrida en la primera zona de disponibilidad
    Type: String
    Default: 10.173.162.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  HybridSubnet2CIDR:
    Description: Ingrese el rango de IP (CIDR) para la subred hibrida en la segunda zona de disponibilidad
    Type: String
    Default: 10.173.165.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
  
  HybridSubnet3CIDR:
    Description: Ingrese el rango de IP (CIDR) para la subred hibrida en la tercera zona de disponibilidad
    Type: String
    Default: 10.173.168.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  MasterOrLinked:
    Description: Selecciona si es una red Master con Nat Gateway y TransitGateway o una red Linked sin Nat Gateway
    Type: String
    Default: Linked
    AllowedValues:
      - Master
      - Linked
  
  MasterTransitGateway:
    Description:  (Solo se debe ingresar un valor si es una Linked Account)
    Type: String
    
Conditions:
  isMasterNetwork:
    !Not [!Equals [!Ref MasterOrLinked, "Linked"]]
  isLinkedNetwork:
    !Not [!Equals [!Ref MasterOrLinked, "Master"]]

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true  
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${AccountNamingConstructor}-vpc

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${AccountNamingConstructor}-ig

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref 'AvailabilityZone1'
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - 
          Key: Name
          Value: !Sub ${AccountNamingConstructor}-publico-${AvailabilityZone1}-1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref 'AvailabilityZone2'
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - 
          Key: Name
          Value: !Sub ${AccountNamingConstructor}-publico-${AvailabilityZone2}-2

  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref 'AvailabilityZone3'
      CidrBlock: !Ref PublicSubnet3CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - 
          Key: Name
          Value: !Sub ${AccountNamingConstructor}-publico-${AvailabilityZone3}-3

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref 'AvailabilityZone1'
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - 
          Key: Name
          Value: !Sub ${AccountNamingConstructor}-privado-${AvailabilityZone1}-1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref 'AvailabilityZone2'
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - 
          Key: Name
          Value: !Sub ${AccountNamingConstructor}-privado-${AvailabilityZone2}-2

  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref 'AvailabilityZone3'
      CidrBlock: !Ref PrivateSubnet3CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - 
          Key: Name
          Value: !Sub ${AccountNamingConstructor}-privado-${AvailabilityZone3}-3

  HybridSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref 'AvailabilityZone1'
      CidrBlock: !Ref HybridSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - 
          Key: Name
          Value: !Sub ${AccountNamingConstructor}-hibrido-${AvailabilityZone1}-1

  HybridSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref 'AvailabilityZone2'
      CidrBlock: !Ref HybridSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - 
          Key: Name
          Value: !Sub ${AccountNamingConstructor}-hibrido-${AvailabilityZone2}-2

  HybridSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref 'AvailabilityZone3'
      CidrBlock: !Ref HybridSubnet3CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - 
          Key: Name
          Value: !Sub ${AccountNamingConstructor}-hibrido-${AvailabilityZone3}-3

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Condition: isMasterNetwork
    Properties:
      Domain: vpc
      Tags:
        - 
          Key: Name
          Value: !Sub ${AccountNamingConstructor}-eip-natgateway-1

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Condition: isMasterNetwork
    Properties:
      Domain: vpc
      Tags:
        - 
          Key: Name
          Value: !Sub ${AccountNamingConstructor}-epi-natgateway-2

  NatGateway3EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Condition: isMasterNetwork
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${AccountNamingConstructor}-epi-natgateway-3

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Condition: isMasterNetwork
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - 
          Key: Name
          Value: !Sub ${AccountNamingConstructor}-natgateway-1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Condition: isMasterNetwork
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - 
          Key: Name
          Value: !Sub ${AccountNamingConstructor}-natgateway-2

  NatGateway3:
    Type: AWS::EC2::NatGateway
    Condition: isMasterNetwork
    Properties:
      AllocationId: !GetAtt NatGateway3EIP.AllocationId
      SubnetId: !Ref PublicSubnet3
      Tags:
        - 
          Key: Name
          Value: !Sub ${AccountNamingConstructor}-natgateway-3

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AccountNamingConstructor}-publico-rt-${AvailabilityZone1}-1

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet3

  HybridRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AccountNamingConstructor}-hibrido-rt-${AvailabilityZone1}-1

  DefaultHybridRoute1:
    Type: AWS::EC2::Route
    Condition: isMasterNetwork
    Properties:
      RouteTableId: !Ref HybridRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  DefaultHybridRoute1Tg:
    Type: AWS::EC2::Route
    Condition: isLinkedNetwork
    DependsOn: AppVpcTga
    Properties:
      RouteTableId: !Ref HybridRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayId: !Ref MasterTransitGateway

  HybridSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref HybridRouteTable1
      SubnetId: !Ref HybridSubnet1

  HybridRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AccountNamingConstructor}-hibrido-rt-${AvailabilityZone2}-2

  DefaultHybridRoute2:
    Type: AWS::EC2::Route
    Condition: isMasterNetwork
    Properties:
      RouteTableId: !Ref HybridRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
  
  DefaultHybridRoute2Tg:
    Type: AWS::EC2::Route
    Condition: isLinkedNetwork
    DependsOn: AppVpcTga
    Properties:
      RouteTableId: !Ref HybridRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayId: !Ref MasterTransitGateway

  HybridSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref HybridRouteTable2
      SubnetId: !Ref HybridSubnet2

  HybridRouteTable3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AccountNamingConstructor}-hibrido-rt-${AvailabilityZone3}-3

  DefaultHybridRoute3:
    Type: AWS::EC2::Route
    Condition: isMasterNetwork
    Properties:
      RouteTableId: !Ref HybridRouteTable3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway3
  
  DefaultHybridRoute3Tg:
    Type: AWS::EC2::Route
    Condition: isLinkedNetwork
    DependsOn: AppVpcTga
    Properties:
      RouteTableId: !Ref HybridRouteTable3
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayId: !Ref MasterTransitGateway

  HybridSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref HybridRouteTable3
      SubnetId: !Ref HybridSubnet3
      
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AccountNamingConstructor}-privado-rt-${AvailabilityZone1}-1

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2

  PrivateSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet3
  
  FlowLogRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: "vpc-flow-logs.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "FlowLogRole-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: 
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:DescribeLogGroups"
                  - "logs:DescribeLogStreams"
                Resource: "*"

      RoleName: !Sub ${AccountNamingConstructor}-flowlog-iam-role

  MyFlowLog:
    Type: AWS::EC2::FlowLog
    Properties:
      DeliverLogsPermissionArn: !GetAtt FlowLogRole.Arn
      LogGroupName: !Sub ${AccountNamingConstructor}-lg
      ResourceId: !Ref VPC  
      ResourceType: VPC
      TrafficType: ALL
  
  myTransitGateway:
    Type: "AWS::EC2::TransitGateway"
    Condition: isMasterNetwork
    DependsOn: PrivateRouteTable
    Properties:
      AmazonSideAsn: 65000
      Description: "Transit Gateway"
      DnsSupport: "enable"
      VpnEcmpSupport: "enable"
      DefaultRouteTableAssociation: "disable"
      DefaultRouteTablePropagation: "disable"
      AutoAcceptSharedAttachments: "enable"
      Tags:
      - Key: Name
        Value: !Sub ${AccountNamingConstructor}-tg
  
  NetworkVpcTga:
    Type: AWS::EC2::TransitGatewayAttachment
    Condition: isMasterNetwork
    Properties: 
      SubnetIds: 
      - !Ref HybridSubnet1
      - !Ref HybridSubnet2
      - !Ref HybridSubnet3
      Tags: 
      - Key: Name
        Value: !Sub ${AccountNamingConstructor}-vpc-tga
      TransitGatewayId: !Ref myTransitGateway
      VpcId: !Ref VPC
  
  AppVpcTga:
    Type: AWS::EC2::TransitGatewayAttachment
    Condition: isLinkedNetwork
    Properties: 
      SubnetIds: 
      - !Ref HybridSubnet1
      - !Ref HybridSubnet2
      - !Ref HybridSubnet3
      Tags: 
      - Key: Name
        Value: !Sub ${AccountNamingConstructor}-vpc-tga
      TransitGatewayId: !Ref MasterTransitGateway
      VpcId: !Ref VPC

  NetworkEgressVpcTgRt:
    Type: AWS::EC2::TransitGatewayRouteTable
    Condition: isMasterNetwork
    DependsOn: NetworkVpcTga
    Properties: 
      Tags: 
      - Key: Name
        Value: !Sub ${AccountNamingConstructor}-egress-tg-rt
      TransitGatewayId: !Ref myTransitGateway
  
  AppVpcTgRt:
    Type: AWS::EC2::TransitGatewayRouteTable
    Condition: isMasterNetwork
    Properties: 
      Tags: 
      - Key: Name
        Value: !Sub ${AccountNamingConstructor}-app-tg-rt
      TransitGatewayId: !Ref myTransitGateway
  
  VpnTgRt:
    Type: AWS::EC2::TransitGatewayRouteTable
    Condition: isMasterNetwork
    Properties: 
      Tags: 
      - Key: Name
        Value: !Sub ${AccountNamingConstructor}-vpn-tg-rt
      TransitGatewayId: !Ref myTransitGateway

  NetworkVpcTgRtAssoc:
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    Condition: isMasterNetwork
    Properties:
      TransitGatewayAttachmentId: !Ref NetworkVpcTga
      TransitGatewayRouteTableId: !Ref NetworkEgressVpcTgRt

  AppVpcTgRtRule1:
    Type: AWS::EC2::TransitGatewayRoute
    Condition: isMasterNetwork
    Properties: 
      Blackhole: true
      DestinationCidrBlock: 10.0.0.0/8
      TransitGatewayRouteTableId: !Ref AppVpcTgRt

  AppVpcTgRtRule2:
    Type: AWS::EC2::TransitGatewayRoute
    Condition: isMasterNetwork
    Properties: 
      Blackhole: true
      DestinationCidrBlock: 172.16.0.0/12
      TransitGatewayRouteTableId: !Ref AppVpcTgRt

  AppVpcTgRtRule3:
    Type: AWS::EC2::TransitGatewayRoute
    Condition: isMasterNetwork
    Properties: 
      Blackhole: true
      DestinationCidrBlock: 192.168.0.0/16
      TransitGatewayRouteTableId: !Ref AppVpcTgRt
  
  AppVpcTgRtRule4:
    Type: AWS::EC2::TransitGatewayRoute
    Condition: isMasterNetwork
    Properties: 
      Blackhole: false
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayAttachmentId: !Ref NetworkVpcTga
      TransitGatewayRouteTableId: !Ref AppVpcTgRt
  
Outputs:
  VPC:
    Description: Referencia de la VPC creada
    Value: !Ref VPC

  PublicSubnets:
    Description: Lista de las subredes públicas.
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2, !Ref PublicSubnet3 ]]

  HybridSubnets:
    Description: Lista de las subredes hibridas.
    Value: !Join [ ",", [ !Ref HybridSubnet1, !Ref HybridSubnet2, !Ref HybridSubnet3 ]]

  PrivateSubnets:
    Description: Lista de las subredes privadas.
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2, !Ref PrivateSubnet3 ]]

  PublicSubnet1:
    Description: Referencia a la subred pública en la primera zona de disponibilidad
    Value: !Ref PublicSubnet1

  PublicSubnet2:
    Description: Referencia a la subred pública en la segunda zona de disponibilidad
    Value: !Ref PublicSubnet2
  
  PublicSubnet3:
    Description: Referencia a la subred pública en la tercera zona de disponibilidad
    Value: !Ref PublicSubnet2

  PrivateSubnet1:
    Description: Referencia a la subred privada en la segunda zona de disponibilidad
    Value: !Ref PrivateSubnet1

  PrivateSubnet2:
    Description: Referencia a la subred privada en la tercera zona de disponibilidad
    Value: !Ref PrivateSubnet2

  PrivateSubnet3:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnet3

  HybridSubnet1:
    Description: Referencia a la subred hibrida en la primera zona de disponibilidad
    Value: !Ref HybridSubnet1
  
  HybridSubnet2:
    Description: Referencia a la subred privada en la segunda zona de disponibilidad
    Value: !Ref HybridSubnet2

  HybridSubnet3:
    Description: Referencia a la subred hibrida en la tercera zona de disponibilidad
    Value: !Ref HybridSubnet3

  TransitGateway:
    Description: Referencia a Transit Gateway
    Condition: isMasterNetwork
    Value: !Ref myTransitGateway
    